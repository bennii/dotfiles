set $mod Mod1
set $Locker ./Scripts/lock.sh && sleep 1
# set $browser firefox
set $browser google-chrome-stable
set $ws1 1:      
set $ws2 2:      
set $ws3 3:      
set $ws4 4:      
set $ws5 5:      
set $ws6 6:      
set $ws7 7:      
set $ws8 8:
set $ws9 9:
set $ws0 10:      

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Function keys
bindsym XF86AudioMute exec amixer set Master mute
bindsym XF86AudioRaiseVolume exec amixer set Master 5+ unmute
bindsym XF86AudioLowerVolume exec amixer set Master 5- unmute
bindsym $mod+Return exec --no-startup-id st -e /usr/bin/fish

# custom program bindings
bindsym $mod+b exec --no-startup-id $browser
bindsym $mod+t exec st -e nctelegram
bindsym $mod+e exec st -e nvim

bindsym $mod+p mode "$mode_system"

bindsym $mod+Shift+q kill
bindsym $mod+d exec rofi -show run -lines 7 -width 33 -padding 30 -bw 0

bindsym $mod+Shift+t exec sh Scripts/toggleTouchpad.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+g split h
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws0

bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws0

bindsym $mod+Shift+c reload
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec i3-msg exit

set $mode_gaps gaps
set $mode_gaps_outer outer gaps
set $mode_gaps_inner inner gaps
bindsym $mod+Shift+g mode "$mode_gaps"
mode "$mode_gaps" {
    bindsym o      mode "$mode_gaps_outer"
    bindsym i      mode "$mode_gaps_inner"

    bindsym 0      mode "default", exec --no-startup-id i3-msg "gaps inner current set 0" && i3-msg "gaps outer current set 0"
    bindsym d      mode "default", exec --no-startup-id i3-msg "gaps inner current set $default_gaps_inner" && i3-msg "gaps outer current set $default_gaps_outer"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_inner" {
    bindsym plus  gaps inner current plus 5
    bindsym minus gaps inner current minus 5
    bindsym 0     mode "default", gaps inner current set 0
    bindsym d     mode "default", gaps inner current set $default_gaps_inner

    bindsym Shift+plus  gaps inner all plus 5
    bindsym Shift+minus gaps inner all minus 5
    bindsym Shift+0     mode "default", gaps inner all set 0
    bindsym Shift+d     mode "default", gaps inner all set $default_gaps_inner

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "$mode_gaps_outer" {
    bindsym plus  gaps outer current plus 5
    bindsym minus gaps outer current minus 5
    bindsym 0     mode "default", gaps outer current set 0
    bindsym d     mode "default", gaps outer current set $default_gaps_outer

    bindsym Shift+plus  gaps outer all plus 5
    bindsym Shift+minus gaps outer all minus 5
    bindsym Shift+0     mode "default", gaps outer all set 0
    bindsym Shift+d     mode "default", gaps outer all set $default_gaps_outer

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

mode "resize" {
    bindsym Left resize shrink width 5 px or 5 ppt
    bindsym Down resize grow height 5 px or 5 ppt
    bindsym Up resize shrink height 5 px or 5 ppt
    bindsym Right resize grow width 5 px or 5 ppt

    bindsym Shift+Left resize shrink width 50px
    bindsym Shift+Down resize grow height 50px
    bindsym Shift+Up resize shrink height 50px
    bindsym Shift+Right resize grow width 50px

    bindsym Return mode "default"
    bindsym Escape mode "default"
}


set $mode_system System (Shift + ) (l) lock (s) suspend, (r) reboot, (p) poweroff

mode "$mode_system" {
    bindsym Shift+l exec --no-startup-id $Locker, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl suspend, mode "default"
    bindsym Shift+p exec --no-startup-id systemctl poweroff -i, mode "default"

    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

bar {
    position top
    separator_symbol "  "
    font pango: Hack 12
    strip_workspace_numbers yes
    status_command py3status -c ~/.i3/i3status.conf -n 10 -i ~/.i3/py3status/modules

    colors {
        background 	$111111
        separator   $FFFFFF
        statusline  $1E90FF 

        urgent_workspace    $1E90FF $1E90FF  $0000FF
        focused_workspace   $1E90FF $1E90FF  $FFFFFF
        inactive_workspace  $111111 $111111  $888888
    }
}

smart_gaps on
smart_borders no_gaps
gaps outer 5
gaps inner 20
for_window [class="^.*"] border pixel 3

client.focused              $FFFFFF $1E90FF $FFFFFF $0000FF
client.unfocused            $FFFFFF $111111 $FFFFFF $0000FF
client.focused_inactive     $FFFFFF $111111 $FFFFFF $0000FF


exec --no-startup-id redshift
